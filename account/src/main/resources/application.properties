spring.application.name=account
server.port=8082
# This means that although a service might be running on port 8082, it will only listen on the localhost network interface.
# Requests coming from outside (or from other machines) will not be able to connect to that port directly.
#server.address=127.0.0.1
spring.datasource.url=jdbc:mysql://mysql-account:3306/banksphere_account
spring.datasource.username=user
spring.datasource.password=password
# JPA and Hibernate configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
#Kafka configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.auto-offset-reset=earliest
# Kafka JSON deserializer settings:
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.example.common.event
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.example.common.event.TransactionEvent